// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rusq/slackdump/v3/downloader (interfaces: GetFiler)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_downloader/mock_getfiler.go . GetFiler
//

// Package mock_downloader is a generated GoMock package.
package mock_downloader

import (
	context "context"
	io "io"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGetFiler is a mock of GetFiler interface.
type MockGetFiler struct {
	ctrl     *gomock.Controller
	recorder *MockGetFilerMockRecorder
	isgomock struct{}
}

// MockGetFilerMockRecorder is the mock recorder for MockGetFiler.
type MockGetFilerMockRecorder struct {
	mock *MockGetFiler
}

// NewMockGetFiler creates a new mock instance.
func NewMockGetFiler(ctrl *gomock.Controller) *MockGetFiler {
	mock := &MockGetFiler{ctrl: ctrl}
	mock.recorder = &MockGetFilerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetFiler) EXPECT() *MockGetFilerMockRecorder {
	return m.recorder
}

// GetFileContext mocks base method.
func (m *MockGetFiler) GetFileContext(ctx context.Context, downloadURL string, writer io.Writer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileContext", ctx, downloadURL, writer)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFileContext indicates an expected call of GetFileContext.
func (mr *MockGetFilerMockRecorder) GetFileContext(ctx, downloadURL, writer any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileContext", reflect.TypeOf((*MockGetFiler)(nil).GetFileContext), ctx, downloadURL, writer)
}
